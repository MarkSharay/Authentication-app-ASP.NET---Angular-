{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(httpClient) {\n    this.loginPath = environment.apiUrl + 'identity/login/';\n    this.registerPath = environment.apiUrl + 'identity/register/';\n    this.httpClient = httpClient;\n  }\n  login(data) {\n    return this.httpClient.post(this.loginPath, data);\n  }\n  register(data) {\n    return this.httpClient.post(this.registerPath, data);\n  }\n  saveToken(token) {\n    localStorage.setItem('token', token);\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,QAAQ,8BAA8B;;;AAM1D,OAAM,MAAOC,WAAW;EAItBC,YAAYC,UAAsB;IAH1B,cAAS,GAAGH,WAAW,CAACI,MAAM,GAAG,iBAAiB;IAClD,iBAAY,GAAGJ,WAAW,CAACI,MAAM,GAAG,oBAAoB;IAG9D,IAAI,CAACD,UAAU,GAAGA,UAAU;EAC9B;EACAE,KAAK,CAACC,IAAS;IACb,OAAO,IAAI,CAACH,UAAU,CAACI,IAAI,CAAM,IAAI,CAACC,SAAS,EAAEF,IAAI,CAAC;EACxD;EACAG,QAAQ,CAACH,IAAS;IAChB,OAAO,IAAI,CAACH,UAAU,CAACI,IAAI,CAAM,IAAI,CAACG,YAAY,EAAEJ,IAAI,CAAC;EAC3D;EACAK,SAAS,CAACC,KAAU;IAClBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;EACtC;EAEAG,QAAQ;IACN,OAAOF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;EACtC;;AAnBWf,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAgB,SAAXhB,WAAW;EAAAiB,YAFV;AAAM","names":["environment","AuthService","constructor","httpClient","apiUrl","login","data","post","loginPath","register","registerPath","saveToken","token","localStorage","setItem","getToken","getItem","factory","providedIn"],"sourceRoot":"","sources":["D:\\projects\\WebApplication2\\AngularApp\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private loginPath = environment.apiUrl + 'identity/login/';\n  private registerPath = environment.apiUrl + 'identity/register/';\n  private httpClient: HttpClient;\n  constructor(httpClient: HttpClient) {\n    this.httpClient = httpClient;\n  }\n  login(data: any): Observable<any> {\n    return this.httpClient.post<any>(this.loginPath, data);\n  }\n  register(data: any): Observable<any> {\n    return this.httpClient.post<any>(this.registerPath, data);\n  }\n  saveToken(token: any){\n    localStorage.setItem('token', token);\n  }\n\n  getToken(){\n    return localStorage.getItem('token');\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}